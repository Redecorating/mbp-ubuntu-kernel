---
name: 'Build Kernel Package'

# yamllint disable-line rule:truthy
on: [push]

jobs:
  Lint:
    runs-on: ubuntu-20.04
    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v2
      - name: 'Set up Python 3.9'
        uses: actions/setup-python@v2
      - name: 'Install dependencies'
        run: |
          python -m pip install --upgrade pip
          pip install yamllint
          sudo apt-get install shellcheck bash
      - name: 'Analysing the code'
        run: |
          yamllint .
          shellcheck ./*.sh

  Build:
    needs: ['Lint']
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Build in Docker
        run: sudo ./build.sh

  UploadPackage:
    runs-on: ubuntu-20.04
    steps:
      - name: Upload Kernel
        uses: actions/upload-artifact@v2
        with:
          name: kernel-packages
          path: ${{ github.workspace }}/artifacts/*.deb
      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.create_tag.outputs.tag }}
          release_name: ${{ steps.create_tag.outputs.tag }}
          draft: true
          prerelease: false
      - name: Add Debian package to release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/mbp-16.1-linux-wifi-debian-${{ steps.create_tag.outputs.tag }}.zip
          asset_name: mbp-16.1-linux-wifi-debian-${{ steps.create_tag.outputs.tag }}.zip
          asset_content_type: application/zip
#    - name: Publish release
#      uses: eregon/publish-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        release_id: ${{ steps.create_release.outputs.id }}
